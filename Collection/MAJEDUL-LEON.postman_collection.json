{
	"info": {
		"_postman_id": "4182cff1-a135-40b7-96a0-6cce8e661aaf",
		"name": "MAJEDUL-LEON",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33497169",
		"_collection_link": "https://galactic-moon-615883.postman.co/workspace/MAJEDUL-LEON~18ebc7db-b771-45c7-8003-ed0229a0dace/collection/33497169-4182cff1-a135-40b7-96a0-6cce8e661aaf?action=share&source=collection_link&creator=33497169"
	},
	"item": [
		{
			"name": "Add Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"if (responseCode==200){\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\",jsonData.bookingid)\r",
							"}\r",
							"\r",
							"else if (responseCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							"\r",
							"else if (responseCode==500){\r",
							"    pm.test(\"Server Error\")\r",
							"}\r",
							"\r",
							"else {\r",
							"    pm.test(\"Something Went Wrong\")\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalPrice\",totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositPaid\",depositPaid)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalNeeds\",additionalNeeds)\r",
							"\r",
							"//DATE\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"\r",
							"\r",
							"const checkin = today.subtract(1,'d').format('YYYY-MM-DD')\r",
							"const checkout=today.add(5,'d').format('YYYY-MM-DD')\r",
							"console.log(checkin)\r",
							"console.log(checkout)\r",
							"\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"if (responseCode==200){\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"First Name Validation\", function () {\r",
							"   pm.expect(pm.environment.get(\"firstName\")).to.eql(jsonData.firstname) ;\r",
							"});\r",
							"\r",
							"pm.test(\"Checkin Validation\", function () {\r",
							"   pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin) ;\r",
							"});\r",
							"\r",
							"pm.test(\"Total Price Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"totalPrice\")).to.eql(jsonData.totalprice.toString())\r",
							"});\r",
							"\r",
							"pm.test(\"Deposit Paid Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"depositPaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"\r",
							"});\r",
							"\r",
							"}\r",
							"\r",
							"else if (responseCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							"\r",
							"else if (responseCode==500){\r",
							"    pm.test(\"Server Error\")\r",
							"}\r",
							"\r",
							"else {\r",
							"    pm.test(\"Something Went Wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\",jsonData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/auth",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Same as POST\r",
							"\r",
							"var firstName=pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstUName\",firstName)\r",
							"\r",
							"var lastName=pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastUName\",lastName)\r",
							"\r",
							"var totalPrice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalUPrice\",totalPrice)\r",
							"\r",
							"var depositPaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositUPaid\",depositPaid)\r",
							"\r",
							"var additionalNeeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"pm.environment.set(\"additionalUNeeds\",additionalNeeds)\r",
							"\r",
							"//DATE\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"\r",
							"\r",
							"const checkin = today.subtract(1,'d').format('YYYY-MM-DD')\r",
							"const checkout=today.add(5,'d').format('YYYY-MM-DD')\r",
							"console.log(checkin)\r",
							"console.log(checkout)\r",
							"\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"pm.environment.set(\"checkout\",checkout)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstUName}}\",\r\n\t\"lastname\" : \"{{lastUName}}\",\r\n\t\"totalprice\" : {{totalUPrice}},\r\n\t\"depositpaid\" : {{depositUPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalUNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Updated Booking Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"if (responseCode==200){\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.test(\"First Name Validation\", function () {\r",
							"   pm.expect(pm.environment.get(\"firstUName\")).to.eql(jsonData.firstname) ;\r",
							"});\r",
							"\r",
							"pm.test(\"Checkin Validation\", function () {\r",
							"   pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin) ;\r",
							"});\r",
							"\r",
							"pm.test(\"Total Price Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"totalUPrice\")).to.eql(jsonData.totalprice.toString())\r",
							"});\r",
							"\r",
							"pm.test(\"Deposit Paid Validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"depositUPaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"\r",
							"});\r",
							"\r",
							"}\r",
							"\r",
							"else if (responseCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							"\r",
							"else if (responseCode==500){\r",
							"    pm.test(\"Server Error\")\r",
							"}\r",
							"\r",
							"else {\r",
							"    pm.test(\"Something Went Wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var responseCode = pm.response.code\r",
							"\r",
							"if (responseCode==200){\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"}\r",
							"\r",
							"else if (responseCode==404){\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							"\r",
							"else if (responseCode==500){\r",
							"    pm.test(\"Server Error\")\r",
							"}\r",
							"\r",
							"else {\r",
							"    pm.test(\"Something Went Wrong\")\r",
							"}"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseurl",
			"value": "https://restful-booker.herokuapp.com",
			"type": "string"
		}
	]
}